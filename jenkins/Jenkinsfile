pipeline {
    agent any
    // agent {
    //     label 'docker' // Assurez-vous que cet agent avec label 'docker' est disponible, ou utilisez 'any'
    // }
    environment {
        CI = 'true'
    }
    stages {
        stage('Build') {
            steps {
                script {
                    try {
                        sh 'npm install'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    try {
                        sh './jenkins/scripts/test.sh'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }
        stage('Deliver') {
            steps {
                script {
                    try {
                        sh './jenkins/scripts/deliver.sh'
                        input message: 'Finished using the web site? (Click "Proceed" to continue)'
                        sh './jenkins/scripts/kill.sh'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }
    }
}
